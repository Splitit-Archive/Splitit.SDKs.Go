/*
 * splitit-web-api-public-sdk
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package splitit
// ProcessorsAllOf struct for ProcessorsAllOf
type ProcessorsAllOf struct {
	Name string `json:"Name,omitempty"` 
	ApiUrl string `json:"ApiUrl,omitempty"` 
	MaxNumberOfRetries int32 `json:"MaxNumberOfRetries"` 
	TimeoutSeconds int32 `json:"TimeoutSeconds"` 
	MaxAuth int32 `json:"MaxAuth"` 
	GracePeriod int32 `json:"GracePeriod"` 
	AsyncRefundGracePeriodDays int32 `json:"AsyncRefundGracePeriodDays,omitempty"` 
	IsCheckedMastercard bool `json:"IsCheckedMastercard"` 
	IsCheckedUpi bool `json:"IsCheckedUpi"` 
	IsCheckedVisa bool `json:"IsCheckedVisa"` 
	IsCheckedAmex bool `json:"IsCheckedAmex"` 
	IsCheckedMaestro bool `json:"IsCheckedMaestro"` 
	IsCheckedJcb bool `json:"IsCheckedJcb"` 
	IsCheckedDiscover bool `json:"IsCheckedDiscover"` 
	Is3ds2Supported bool `json:"Is3ds2Supported"` 
	GatewayApiassembly string `json:"GatewayApiassembly,omitempty"` 
	DisplayName string `json:"DisplayName,omitempty"` 
	GatewayApiimplementorNs string `json:"GatewayApiimplementorNs,omitempty"` 
	IsTokenSupported bool `json:"IsTokenSupported"` 
	ConsumerUpdateCcGracePeriod string `json:"ConsumerUpdateCcGracePeriod,omitempty"` 
	IsVoidSupported bool `json:"IsVoidSupported"` 
	IsVoidAfterFailRefund bool `json:"IsVoidAfterFailRefund"` 
	MinAmountAllowedForAuth float64 `json:"MinAmountAllowedForAuth"` 
	CaptureDelayInSec int32 `json:"CaptureDelayInSec"` 
	VoidDelayInSec int32 `json:"VoidDelayInSec"` 
	AllowPartialVoid bool `json:"AllowPartialVoid"` 
	Installments []Installments `json:"Installments,omitempty"` 
	ProcessorAuthenticationParameters []ProcessorAuthenticationParameters `json:"ProcessorAuthenticationParameters,omitempty"` 
	ReAuthorizations []ReAuthorizations `json:"ReAuthorizations,omitempty"` 
	TerminalGatewayDatas []TerminalGatewayDatas `json:"TerminalGatewayDatas,omitempty"` 
}
